<?php echo $this->doctype(); ?>
<html lang='en' class='no-js'>
<head>
  <meta charset='utf-8'> <!-- Charset should be defined as early as possible to avoid rendering problems -->

  <!-- ==== DNS Prefetch ==== -->
  <link rel="dns-prefetch" href="//maps.googleapis.com">

  <!-- ==== Critical Meta Tags ==== -->
  <meta http-equiv='X-UA-Compatible' content='IE=edge,chrome=1'> <!-- This line is best to remove and just send it as a http header -->
  <meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no'> <!-- Required for Responsive Web Design -->
  <?php echo $this->headTitle($this->translate('MyUNHCR'))->setSeparator(' - ')->setAutoEscape(false) ?>

  <!-- ======= Critical Inline Scripts ======= -->
  <script>


    var doc = document.documentElement;
    window.app = {
      ua: navigator.userAgent.toLowerCase(),
      userDevice: '',
      userDeviceVersion: '',
      userModernFail: false,
      DOMContentLoaded: false
    };
    // window.DOMContentLoaded = false;


    function supportCheck() {
      // Show javascript support
      doc.className = doc.className.replace(/\bno-js\b/,'js');

      // Test for touch support (Modernizr)
      if( ('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch ) {
        doc.className += " touch";
      } else {
        doc.className += " no-touch";
      }

      // Show whether the device is modern
      if ( modernTest() === true ) {
        doc.className += " modern";
      }
    }


    // The "modern test"
    function modernTest() {

      // Android version detect
      if (app.ua.indexOf("android") >= 0) {
        app.userDevice = 'Android';
        app.userDeviceVersion = parseFloat(app.ua.match(/android\s([0-9\.]*)/)[1]);
        
        // If it's lower than Android 2.3, fail the modern test
        if( app.userDeviceVersion < 2.3 ) {
          console.log ('Failed the Android Test: ' + app.userDeviceVersion);
          return false;
        } else { return true; }
      }

      // iOS version detect
      else if ( /(iphone|ipad|ipod)/.test(app.ua) ) {
        app.userDevice = 'iOS';
        app.userDeviceVersion = parseFloat((navigator.appVersion).match(/OS (\d+)_(\d+)_?(\d+)?/)[1]);

        // If it's lower than iOS 6, fail the modern test
        if( app.userDeviceVersion < 6.1 ) {
          console.log ('Failed the iOS Test: ' + app.userDeviceVersion);
          return false;
        } else { return true; }
      }

      // Device needs to support 2D css transforms to qualify
      else if ( detectCSSFeature('transform') !== true ) {
        console.log ('Failed the 2D CSS transforms test ');
        return false;
      }

      // If all those pass, show as modern
      else {
        return true;
      }
    };


    // Function for vendor feature testing
    function detectCSSFeature(featurename) {
      var feature = false,
      domPrefixes = ['Webkit', 'Moz', 'ms', 'O'],
      elm = document.createElement('div'),
      featurenameCapital = null;

      featurename = featurename.toLowerCase();

      if( elm.style[featurename] !== undefined ) { feature = true; } 

      if( feature === false ) {
        featurenameCapital = featurename.charAt(0).toUpperCase() + featurename.substr(1);
        for( var i = 0; i < domPrefixes.length; i++ ) {
          if( elm.style[domPrefixes[i] + featurenameCapital ] !== undefined ) {
            feature = true;
            break;
          }
        }
      }
      return feature; 
    }


    // Log if DOMContentLoaded has fired, for scripts which load asynchronously after the event
    var logDOMContent = function() {
      document.addEventListener("DOMContentLoaded", function(){
        window.app.DOMContentLoaded = true;
      });
    }


    supportCheck();
    logDOMContent();


  </script>

  <!-- ==== CSS ==== -->
  <?php
    $this->headLink()->appendStylesheet('/css/primitive.css');
    $this->headLink()->appendStylesheet('/css/modern.css');
    echo $this->headLink();
  ?>

  <!-- ==== Secondary Meta Tags ==== -->
  <meta name='description' content=''>
</head>
<body class="<?php echo $this->layout()->body_class; ?>">

<?php echo $this->content; ?>

<!-- Various helpers -->
<div id='screenSize'></div>
<div id='alertPolite'></div>
<div id='alertAssertive'></div>

<!-- Secondary script files (async!) -->
<!-- <script src='http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js' defer async></script> -->
<script src='scripts/vendor/zepto.js' defer async></script>
<script src='scripts/main.js' defer async></script>

</body>
</html>
