<?php

namespace DoctrineORMModule\Proxy\__CG__\Administration\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CodeCountries extends \Administration\Entity\CodeCountries implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'code', 'name', 'nameLong', 'nameFormal', 'code2', 'oracleId', 'nationality', 'majorArea', 'region', 'lessDeveloped', 'leastDeveloped', 'bureau', 'bureauOrder', 'bureauFull', 'nameFr', 'majorAreaFr', 'regionFr', 'active');
        }

        return array('__isInitialized__', 'id', 'code', 'name', 'nameLong', 'nameFormal', 'code2', 'oracleId', 'nationality', 'majorArea', 'region', 'lessDeveloped', 'leastDeveloped', 'bureau', 'bureauOrder', 'bureauFull', 'nameFr', 'majorAreaFr', 'regionFr', 'active');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CodeCountries $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', array($active));

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', array());

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setBureau($bureau)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBureau', array($bureau));

        return parent::setBureau($bureau);
    }

    /**
     * {@inheritDoc}
     */
    public function getBureau()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBureau', array());

        return parent::getBureau();
    }

    /**
     * {@inheritDoc}
     */
    public function setBureauFull($bureauFull)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBureauFull', array($bureauFull));

        return parent::setBureauFull($bureauFull);
    }

    /**
     * {@inheritDoc}
     */
    public function getBureauFull()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBureauFull', array());

        return parent::getBureauFull();
    }

    /**
     * {@inheritDoc}
     */
    public function setBureauOrder($bureauOrder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBureauOrder', array($bureauOrder));

        return parent::setBureauOrder($bureauOrder);
    }

    /**
     * {@inheritDoc}
     */
    public function getBureauOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBureauOrder', array());

        return parent::getBureauOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', array($code));

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', array());

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode2($code2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode2', array($code2));

        return parent::setCode2($code2);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode2', array());

        return parent::getCode2();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLeastDeveloped($leastDeveloped)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLeastDeveloped', array($leastDeveloped));

        return parent::setLeastDeveloped($leastDeveloped);
    }

    /**
     * {@inheritDoc}
     */
    public function getLeastDeveloped()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLeastDeveloped', array());

        return parent::getLeastDeveloped();
    }

    /**
     * {@inheritDoc}
     */
    public function setLessDeveloped($lessDeveloped)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLessDeveloped', array($lessDeveloped));

        return parent::setLessDeveloped($lessDeveloped);
    }

    /**
     * {@inheritDoc}
     */
    public function getLessDeveloped()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLessDeveloped', array());

        return parent::getLessDeveloped();
    }

    /**
     * {@inheritDoc}
     */
    public function setMajorArea($majorArea)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMajorArea', array($majorArea));

        return parent::setMajorArea($majorArea);
    }

    /**
     * {@inheritDoc}
     */
    public function getMajorArea()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMajorArea', array());

        return parent::getMajorArea();
    }

    /**
     * {@inheritDoc}
     */
    public function setMajorAreaFr($majorAreaFr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMajorAreaFr', array($majorAreaFr));

        return parent::setMajorAreaFr($majorAreaFr);
    }

    /**
     * {@inheritDoc}
     */
    public function getMajorAreaFr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMajorAreaFr', array());

        return parent::getMajorAreaFr();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setNameFormal($nameFormal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNameFormal', array($nameFormal));

        return parent::setNameFormal($nameFormal);
    }

    /**
     * {@inheritDoc}
     */
    public function getNameFormal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameFormal', array());

        return parent::getNameFormal();
    }

    /**
     * {@inheritDoc}
     */
    public function setNameFr($nameFr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNameFr', array($nameFr));

        return parent::setNameFr($nameFr);
    }

    /**
     * {@inheritDoc}
     */
    public function getNameFr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameFr', array());

        return parent::getNameFr();
    }

    /**
     * {@inheritDoc}
     */
    public function setNameLong($nameLong)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNameLong', array($nameLong));

        return parent::setNameLong($nameLong);
    }

    /**
     * {@inheritDoc}
     */
    public function getNameLong()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameLong', array());

        return parent::getNameLong();
    }

    /**
     * {@inheritDoc}
     */
    public function setNationality($nationality)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNationality', array($nationality));

        return parent::setNationality($nationality);
    }

    /**
     * {@inheritDoc}
     */
    public function getNationality()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNationality', array());

        return parent::getNationality();
    }

    /**
     * {@inheritDoc}
     */
    public function setOracleId($oracleId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOracleId', array($oracleId));

        return parent::setOracleId($oracleId);
    }

    /**
     * {@inheritDoc}
     */
    public function getOracleId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOracleId', array());

        return parent::getOracleId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegion($region)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegion', array($region));

        return parent::setRegion($region);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegion', array());

        return parent::getRegion();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegionFr($regionFr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegionFr', array($regionFr));

        return parent::setRegionFr($regionFr);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegionFr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegionFr', array());

        return parent::getRegionFr();
    }

}
